{"version":3,"sources":["Components/Header.jsx","Components/InputArea.jsx","Components/Card.jsx","Components/App.jsx","index.js"],"names":["Header","useStyles","makeStyles","iconButton","backgroundColor","borderRadius","InputArea","props","useState","input","setInput","classes","className","label","onSubmit","e","preventDefault","handleSearch","type","id","name","value","onChange","inputValue","target","IconButton","conditions","Card","url","result","filter","condition","group","console","log","getUrl","Number","toString","getGroup","weatherid","style","backgroundImage","onClick","handleDelete","location","description","Math","floor","temp","temp_min","temp_max","api","App","locations","setLocations","prevState","query","fetch","then","response","ok","json","Error","catch","error","alert","map","weather","main","ReactDOM","render","document","getElementById"],"mappings":"+KAUeA,MARf,WACI,OACI,iCACI,kD,iCCANC,EAAYC,YAAW,CACzBC,WAAY,CACRC,gBAAiB,UACjBC,aAAc,iBAkCPC,MA7Bf,SAAmBC,GAEf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAUV,IAahB,OACI,sBAAKW,UAAU,YAAf,UACI,6BAAKL,EAAMM,QACX,uBAAMC,SATd,SAAsBC,GAClBA,EAAEC,iBACFT,EAAMU,aAAaR,GACnBC,EAAS,KAMyBE,UAAU,aAAxC,UACI,uBAAOA,UAAU,aAAaM,KAAK,OAAOC,GAAG,WAAWC,KAAK,WAAWC,MAAOZ,EAAOa,SAflG,SAAsBP,GAClB,IAAMQ,EAAaR,EAAES,OAAOH,MAC5BX,EAASa,MAcD,cAACE,EAAA,EAAD,CAAYb,UAAWD,EAAQR,WAAYe,KAAK,SAAS,aAAW,SAApE,SACI,cAAC,IAAD,a,iBC9BdQ,EAAa,CACf,CACI,MAAS,EACT,UAAa,eACb,IAAO,8BAEX,CACI,MAAS,EACT,UAAa,OACb,IAAO,sBAEX,CACI,MAAS,EACT,UAAa,OACb,IAAO,sBAEX,CACI,MAAS,EACT,UAAa,OACb,IAAO,sBAEX,CACI,MAAS,EACT,UAAa,aACb,IAAO,4BAEX,CACI,MAAS,IACT,UAAa,QACb,IAAO,uBAEX,CACI,MAAS,EACT,UAAa,SACb,IAAO,yBA2CAC,MA3Bf,SAAcpB,GACV,IACMqB,EAdV,SAAgBT,GACZ,IAAMU,EAASH,EAAWI,QAAO,SAAAC,GAAS,OAAIA,EAAUC,QAAUb,KAGlE,OAFAc,QAAQC,IAAIf,GACZc,QAAQC,IAAIL,GACLA,EAAO,GAAGD,IAULO,CANhB,SAAkBhB,GACd,OAAc,MAAPA,EAAaA,EAAKiB,OAAOjB,EAAGkB,WAAW,IAInCC,CAAS/B,EAAMgC,YAG1B,OACI,sBAAK3B,UAAU,OAAO4B,MAAO,CAAEC,gBAAgB,OAAD,OAAQb,EAAR,MAA9C,UACI,qBAAKhB,UAAU,cAAf,SACI,cAACa,EAAA,EAAD,CAAYiB,QAAS,kBAAMnC,EAAMoC,aAAapC,EAAMY,KAApD,SACI,cAAC,IAAD,QAGR,qBAAKP,UAAU,gBAAf,SACKL,EAAMqC,WAEX,qBAAKhC,UAAU,mBAAf,SACKL,EAAMsC,cAEX,sBAAKjC,UAAU,mBAAf,UACKkC,KAAKC,MAAMxC,EAAMyC,MADtB,YAGA,sBAAKpC,UAAU,eAAf,kBACUkC,KAAKC,MAAMxC,EAAM0C,UAD3B,SAC4CH,KAAKC,MAAMxC,EAAM2C,iBCvEnEC,EACC,mCADDA,EAEE,2CAwDOC,MArDf,WAEE,MAAkC5C,mBAAS,IAA3C,mBAAO6C,EAAP,KAAkBC,EAAlB,KAqBA,SAASX,EAAaxB,GACpBmC,GAAa,SAAAC,GACX,OAAOA,EAAUzB,QAAO,SAAAc,GACtB,OAAOA,EAASzB,KAAOA,QAK7B,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWN,MAAM,gCAAgCI,aA9BrD,SAAsBuC,GACpBC,MAAM,GAAD,OAAIN,EAAJ,qBAAyBK,EAAzB,+BAAqDL,IACzDO,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,2BAGnBJ,MAAK,SAAA7B,GACJyB,GAAa,SAAAC,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAsB1B,UAGzBkC,OAAM,SAACC,GACNC,MAAMD,SAgBN,qBAAKpD,UAAU,kBAAf,SACGyC,EAAUa,KAAI,SAAAtB,GAAQ,OACrB,cAAC,EAAD,CAEEzB,GAAIyB,EAASzB,GACb0B,YAAaD,EAASuB,QAAQ,GAAGC,KACjC7B,UAAWK,EAASuB,QAAQ,GAAGhD,GAC/ByB,SAAUA,EAASxB,KACnB4B,KAAMJ,EAASwB,KAAKpB,KACpBC,SAAUL,EAASwB,KAAKnB,SACxBC,SAAUN,EAASwB,KAAKlB,SACxBP,aAAcA,GARTC,EAASzB,aC5C1BkD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf1b5e7c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return (\n        <header>\n            <h1>weather cards</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles({\n    iconButton: {\n        backgroundColor: \"#FFFFFF\",\n        borderRadius: \"0 6px 6px 0\"\n    }\n}); \n\n\nfunction InputArea(props) {\n\n    const [input, setInput] = useState(\"\");\n    const classes = useStyles();\n\n    function handleChange(e) {\n        const inputValue = e.target.value;\n        setInput(inputValue);\n    }\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        props.handleSearch(input);\n        setInput(\"\");\n    }\n \n    return(\n        <div className=\"inputArea\">\n            <h1>{props.label}</h1>\n            <form onSubmit={handleSubmit} className=\"search-box\">\n                <input className=\"search-bar\" type=\"text\" id=\"location\" name=\"location\" value={input} onChange={handleChange}></input>\n                <IconButton className={classes.iconButton} type=\"submit\" aria-label=\"search\">\n                    <SearchIcon />\n                </IconButton>\n            </form>\n        </div>\n    )\n}\n\nexport default InputArea;","import React from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n// Mapped according to https://openweathermap.org/weather-conditions\nconst conditions = [\n    {\n        \"group\": 2,\n        \"condition\": \"thunderstorm\",\n        \"url\": \"../assets/thunderstorm.gif\"\n    },\n    {\n        \"group\": 3,\n        \"condition\": \"rain\",\n        \"url\": \"../assets/rain.gif\"\n    },\n    {\n        \"group\": 5,\n        \"condition\": \"rain\",\n        \"url\": \"../assets/rain.gif\"\n    },\n    {\n        \"group\": 6,\n        \"condition\": \"snow\",\n        \"url\": \"../assets/snow.gif\"\n    },\n    {\n        \"group\": 7,\n        \"condition\": \"atmosphere\",\n        \"url\": \"../assets/atmosphere.gif\"\n    },\n    {\n        \"group\": 800,\n        \"condition\": \"clear\",\n        \"url\": \"../assets/clear.gif\"\n    },\n    {\n        \"group\": 8,\n        \"condition\": \"clouds\",\n        \"url\": \"../assets/clouds.gif\"\n    }\n]\n\nfunction getUrl(id) {\n    const result = conditions.filter(condition => condition.group === id);\n    console.log(id);\n    console.log(result);\n    return result[0].url;\n}\n\n// Need to get id. If 800, clear, otherwise refer to conditions array and only get first number\nfunction getGroup(id) {\n    return id === 800 ? id : Number(id.toString()[0]);\n}\n\nfunction Card(props) {\n    const id = getGroup(props.weatherid);\n    const url = getUrl(id);\n\n    return (\n        <div className=\"card\" style={{ backgroundImage:`url(${url})` }}>\n            <div className=\"card-delete\">\n                <IconButton onClick={() => props.handleDelete(props.id)}>\n                    <ClearIcon />\n                </IconButton>\n            </div>\n            <div className=\"card-location\">\n                {props.location}\n            </div>\n            <div className=\"card-description\">\n                {props.description}\n            </div>\n            <div className=\"card-temperature\">\n                {Math.floor(props.temp)}Â° C\n            </div>\n            <div className=\"card-min-max\">\n                Min: {Math.floor(props.temp_min)} Max: {Math.floor(props.temp_max)}\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport InputArea from \"./InputArea\";\nimport Card from \"./Card\";\n\nconst api = {\n  key: \"12a629be1cabbbf31a09826b615fd0b3\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  // locations is an array of objects containing weather info about each location\n  const [locations, setLocations] = useState([]);\n\n  function handleSearch(query) {\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong');\n      }\n    })\n    .then(result => {\n      setLocations(prevState => {\n        return [...prevState, result]\n      })\n    })\n    .catch((error) => {\n      alert(error);\n    })\n  }\n\n  function handleDelete(id) {\n    setLocations(prevState => {\n      return prevState.filter(location  => {\n        return location.id !== id;\n      })\n    })\n  }\n\n  return (\n    <>\n      <Header />\n      <InputArea label=\"enter your location search...\" handleSearch={handleSearch} />\n      <div className=\"cards-container\">\n        {locations.map(location => \n          <Card \n            key={location.id} \n            id={location.id}\n            description={location.weather[0].main}\n            weatherid={location.weather[0].id}\n            location={location.name} \n            temp={location.main.temp} \n            temp_min={location.main.temp_min}\n            temp_max={location.main.temp_max}\n            handleDelete={handleDelete}\n          />)}\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}